<ui:fragment xmlns="http://www.w3.org/1999/xhtml"
             xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
             xmlns:sharedInput="http://xmlns.jcp.org/jsf/composite/pages/shared/input"
             xmlns:p="http://primefaces.org/ui"
             xmlns:siaInplace="http://xmlns.jcp.org/jsf/composite/pages/shared/inplace"
             xmlns:c="http://java.sun.com/jsp/jstl/core"
>

    <!--@elvariable id="bean" type="fr.siamois.ui.bean.panel.models.panel.single.AbstractSingleEntity"-->
    <!--@elvariable id="customFormPanel" type="fr.siamois.domain.models.form.customform.CustomFormPanel" -->
    <!--@elvariable id="readOnly" type="java.lang.Boolean" -->
    <!--@elvariable id="prefix" type="String" -->
    <!--@elvariable id="root" type="String" -->
    <!--@elvariable id="updateTargetsOnBlur" type="String" -->
    <!--@elvariable id="statusIndex" type="Object" -->


    <p:panelGrid id="customFormPanelGrid-#{statusIndex}-#{prefix}"
                 layout="grid"
    >
        <c:forEach items="#{customFormPanel.rows}" var="row" varStatus="rowStatus">
            <p:row id="row-#{prefix}-#{statusIndex}-#{rowStatus.index}">

                <c:forEach items="#{row.columns}" var="col" varStatus="colStatus">


                    <p:column styleClass="#{col.className}"
                              id="col-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}">
                        <p:outputPanel id="field-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}">
                            <sharedInput:panelField
                                    id="panelField-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                    required="#{col.required}"
                                    title="#{spatialUnitFieldBean.resolveCustomFieldLabel(col.field)}"
                                    forId="#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}:input"
                            >


                                <siaInplace:text
                                        rendered="#{col.field['class'].simpleName eq 'CustomFieldText'}"
                                        id="#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                        panelModel="#{bean}"
                                        field="#{col.field}"
                                        required="#{col.required}"
                                        label="#{spatialUnitFieldBean.resolveCustomFieldLabel(col.field)}"
                                        hasBeenModified="#{bean.formResponse.answers.get(col.field).hasBeenModified}"
                                        answer="#{bean.formResponse.answers.get(col.field)}"
                                        mode="#{col.readOnly ? 'output' : flowBean.getInPlaceFieldMode()}"
                                        updateTargetsOnBlur="#{root}:field-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                />


                                <siaInplace:datePicker
                                        required="#{col.required}"
                                        panelModel="#{bean}"
                                        label="#{spatialUnitFieldBean.resolveCustomFieldLabel(col.field)}"
                                        rendered="#{col.field['class'].simpleName eq 'CustomFieldDateTime'}"
                                        field="#{col.field}"
                                        hasBeenModified="#{bean.formResponse.answers.get(col.field).hasBeenModified}"
                                        answer="#{bean.formResponse.answers.get(col.field)}"
                                        mode="#{col.readOnly ? 'output' : flowBean.getInPlaceFieldMode()}"
                                        updateTargetsOnBlur="#{root}:field-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                >

                                </siaInplace:datePicker>


                                <siaInplace:concept
                                        rendered="#{col.field['class'].simpleName eq 'CustomFieldSelectOneFromFieldCode'}"
                                        hasBeenModified="#{bean.formResponse.answers.get(col.field).hasBeenModified}"
                                        field="#{col.field}"
                                        required="#{col.required}"
                                        label="#{spatialUnitFieldBean.resolveCustomFieldLabel(col.field)}"
                                        mode="#{col.readOnly ? 'output' : flowBean.getInPlaceFieldMode()}"
                                        panelModel="#{bean}"
                                        updateTargetsOnBlur="#{bean.getConceptFieldsUpdateTargetsOnBlur()}"
                                        answer="#{bean.getFieldAnswer(col.field)}"/>


                                <!-- Select one concept from field parent concept children -->

                                <siaInplace:childConcept
                                        rendered="#{col.field['class'].simpleName eq 'CustomFieldSelectOneConceptFromChildrenOfConcept'}"
                                        hasBeenModified="#{bean.formResponse.answers.get(col.field).hasBeenModified}"
                                        field="#{col.field}"
                                        mode="#{col.readOnly ? 'output' : flowBean.getInPlaceFieldMode()}"
                                        panelModel="#{bean}"
                                        updateTargetsOnBlur="#{root}:field-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                        answer="#{bean.formResponse.answers.get(col.field)}"/>


                                <!-- Select one action -->
                                <siaInplace:action
                                        rendered="#{col.field['class'].simpleName eq 'CustomFieldSelectOneActionUnit'}"
                                        hasBeenModified="#{bean.formResponse.answers.get(col.field).hasBeenModified}"
                                        field="#{col.field}"
                                        mode="#{col.readOnly ? 'output' : flowBean.getInPlaceFieldMode()}"
                                        panelModel="#{bean}"
                                        required="#{col.required}"
                                        label="#{spatialUnitFieldBean.resolveCustomFieldLabel(col.field)}"
                                        updateTargetsOnBlur="#{root}:field-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                        answer="#{bean.formResponse.answers.get(col.field)}"/>


                                <siaInplace:spatial
                                        rendered="#{col.field['class'].simpleName eq 'CustomFieldSelectOneSpatialUnit'}"
                                        hasBeenModified="#{bean.formResponse.answers.get(col.field).hasBeenModified}"
                                        field="#{col.field}"
                                        mode="#{col.readOnly ? 'output' : flowBean.getInPlaceFieldMode()}"
                                        panelModel="#{bean}"
                                        required="#{col.required}"
                                        label="#{spatialUnitFieldBean.resolveCustomFieldLabel(col.field)}"
                                        updateTargetsOnBlur="#{root}:field-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                        answer="#{bean.formResponse.answers.get(col.field)}"/>


                                <!-- Select one from person -->
                                <siaInplace:person
                                        rendered="#{col.field['class'].simpleName eq 'CustomFieldSelectOnePerson'}"
                                        hasBeenModified="#{bean.formResponse.answers.get(col.field).hasBeenModified}"
                                        field="#{col.field}"
                                        mode="#{col.readOnly ? 'output' : flowBean.getInPlaceFieldMode()}"
                                        panelModel="#{bean}"
                                        required="#{col.required}"
                                        label="#{spatialUnitFieldBean.resolveCustomFieldLabel(col.field)}"
                                        updateTargetsOnBlur="#{root}:field-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                        answer="#{bean.formResponse.answers.get(col.field)}"/>


                                <!-- Select multiple from person -->
                                <siaInplace:person
                                        rendered="#{col.field['class'].simpleName eq 'CustomFieldSelectMultiplePerson'}"
                                        hasBeenModified="#{bean.formResponse.answers.get(col.field).hasBeenModified}"
                                        field="#{col.field}"
                                        multiple="true"
                                        required="#{col.required}"
                                        label="#{spatialUnitFieldBean.resolveCustomFieldLabel(col.field)}"
                                        mode="#{col.readOnly ? 'output' : flowBean.getInPlaceFieldMode()}"
                                        panelModel="#{bean}"
                                        updateTargetsOnBlur="#{root}:field-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                        answer="#{bean.formResponse.answers.get(col.field)}"/>


                                <!-- Select spatial unit from tree -->
                                <siaInplace:spatialUnitTree
                                        rendered="#{col.field['class'].simpleName eq 'CustomFieldSelectMultipleSpatialUnitTree'}"
                                        hasBeenModified="#{bean.formResponse.answers.get(col.field).hasBeenModified}"
                                        field="#{col.field}"
                                        mode="#{col.readOnly ? 'output' : flowBean.getInPlaceFieldMode()}"
                                        panelModel="#{bean}"
                                        updateTargetsOnBlur="#{root}:field-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                        answer="#{bean.formResponse.answers.get(col.field)}"/>

                                <!-- Select one code OA -->
                                <siaInplace:actionCode
                                        rendered="#{col.field['class'].simpleName eq 'CustomFieldSelectOneActionCode'}"
                                        panelModel="#{bean}"
                                        field="#{col.field}"
                                        required="#{col.required}"
                                        label="#{spatialUnitFieldBean.resolveCustomFieldLabel(col.field)}"
                                        hasBeenModified="#{bean.formResponse.answers.get(col.field).hasBeenModified}"
                                        answer="#{bean.formResponse.answers.get(col.field)}"
                                        mode="#{col.readOnly ? 'output' : flowBean.getInPlaceFieldMode()}"
                                        updateTargetsOnBlur="#{root}:field-#{prefix}-#{statusIndex}-#{rowStatus.index}-#{colStatus.index}"
                                />


                            </sharedInput:panelField>

                            <!-- Select one code OA -->
                        </p:outputPanel>
                    </p:column>


                </c:forEach>
            </p:row>
        </c:forEach>
    </p:panelGrid>

</ui:fragment>