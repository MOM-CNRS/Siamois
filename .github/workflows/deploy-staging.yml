name: Build on new test release

on:
  push:
    branches:
      - staging
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: deploy-staging
  cancel-in-progress: false

jobs:
  build-and-deploy:
    name: Build
    runs-on: ubuntu-latest
    environment: STAGING

    env:
      BUILD_DIR: target
      ARTIFACT_PATTERN: "*.jar"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: zulu

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build (Maven)
        run: mvn -B -DskipTests package

      - name: Locate JAR
        id: jar
        run: |
          shopt -s nullglob
          files=($BUILD_DIR/$ARTIFACT_PATTERN)
          if [ ${#files[@]} -eq 0 ]; then
            echo "Aucun JAR trouvÃ© dans $BUILD_DIR" >&2
            exit 1
          fi
          newest=$(ls -t $BUILD_DIR/$ARTIFACT_PATTERN | head -n1)
          echo "jar_path=$newest" >> "$GITHUB_OUTPUT"
          echo "Found JAR: $newest"

